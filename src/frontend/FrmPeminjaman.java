/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

/**
 *
 * @author Dhany
 */
import backend.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FrmPeminjaman extends javax.swing.JFrame {

    /**
     * Creates new form FrmPeminjaman
     */
    public FrmPeminjaman() {
        initComponents();
        tampilkanData();
        tampilkanCmb();
        kosongkanForm();
        loadComboBoxData();
    }

    public void kosongkanForm() {
        txtId.setText("0");
        if (cmbAnggota.getItemCount() > 0) {
            cmbAnggota.setSelectedIndex(0);
        }
        if (cmbBuku.getItemCount() > 0) {
            cmbBuku.setSelectedIndex(0);
        }
        txtTglPinjam.setText("");
        txtTglKembali.setText("");

        txtTglKembali.setEnabled(false); // Menon-aktifkan field tanggal kembali
    }

    // Ubah method tampilkanData() Anda yang lama menjadi seperti ini
    public void tampilkanData() {
        // Panggil method getAll() untuk mendapatkan semua data peminjaman
        ArrayList<Peminjaman> list = new Peminjaman().getAll();

        // Panggil method tampilkanData(list) yang baru untuk menampilkannya ke tabel
        tampilkanData(list);
    }

    // Letakkan method ini di dalam class FormPeminjaman.java Anda
    public void tampilkanData(ArrayList<Peminjaman> list) {
        // Pastikan nama tabel di desain (misal: tblPeminjaman) sudah benar
        // Kolom disesuaikan dengan tugas, termasuk "Status"
        String[] kolom = {"ID", "Nama Anggota", "Judul Buku", "Tgl Pinjam", "Tgl Kembali", "Status"};

        // Buat object untuk menampung data dari list
        Object[][] rowData = new Object[list.size()][6];

        // Looping sebanyak data di dalam list
        for (int i = 0; i < list.size(); i++) {
            Peminjaman p = list.get(i);

            // Mengubah status dari angka (0/1) menjadi teks
            String statusText;
            if (p.getStatus() == 0) {
                statusText = "Dipinjam";
            } else {
                statusText = "Sudah Dikembalikan";
            }

            rowData[i][0] = p.getIdpeminjaman();
            rowData[i][1] = p.getAnggota().getNama();
            rowData[i][2] = p.getBuku().getJudul();
            rowData[i][3] = p.getTanggalpinjam();
            rowData[i][4] = p.getTanggalkembali();
            rowData[i][5] = statusText; // Kolom ke-6 untuk Status
        }

        // Set model untuk JTable dengan data dan kolom yang sudah disiapkan
        tblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(rowData, kolom));
    }

    // Buat method ini di FormPeminjaman.java
    public void loadComboBoxData() {
        // Mengisi combo box anggota
        DefaultComboBoxModel<Anggota> modelAnggota = new DefaultComboBoxModel<>();
        ArrayList<Anggota> listAnggota = new Anggota().getAll();
        for (Anggota ang : listAnggota) {
            modelAnggota.addElement(ang);
        }
        cmbAnggota.setModel(modelAnggota);

        // Mengisi combo box buku
        DefaultComboBoxModel<Buku> modelBuku = new DefaultComboBoxModel<>();
        ArrayList<Buku> listBuku = new Buku().getAll();
        for (Buku buk : listBuku) {
            modelBuku.addElement(buk);
        }
        cmbBuku.setModel(modelBuku);

        // Agar yang tampil di ComboBox adalah nama/judul, pastikan ada method toString() di class Anggota dan Buku
        // Contoh di Anggota.java:
        // @Override
        // public String toString() {
        //     return this.nama;
        // }
    }

    public void tampilkanCmb() {
        DefaultComboBoxModel modelAnggota = new DefaultComboBoxModel();
        for (Anggota agt : new Anggota().getAll()) {
            modelAnggota.addElement(agt);
        }
        cmbAnggota.setModel(modelAnggota);

        DefaultComboBoxModel modelBuku = new DefaultComboBoxModel();
        for (Buku bk : new Buku().getAll()) {
            modelBuku.addElement(bk);
        }
        cmbBuku.setModel(modelBuku);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnTambahBaru = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        txtTglPinjam = new javax.swing.JTextField();
        txtTglKembali = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeminjaman = new javax.swing.JTable();
        cmbAnggota = new javax.swing.JComboBox<>();
        cmbBuku = new javax.swing.JComboBox<>();
        lblNamaAnggota = new javax.swing.JLabel();
        lblJudulBuku = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("ID Anggota");

        jLabel3.setText("ID Buku");

        jLabel4.setText("Tanggal Pinjam");

        jLabel5.setText("Tanggal Kembali");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnTambahBaru.setText("Tambah Baru");
        btnTambahBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahBaruActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel8.setText("Format : YYYY/MM/DD");

        jLabel9.setText("Format : YYYY/MM/DD");

        tblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPeminjaman);

        cmbAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnggotaActionPerformed(evt);
            }
        });

        cmbBuku.setToolTipText("");
        cmbBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBukuActionPerformed(evt);
            }
        });

        lblNamaAnggota.setText("-");

        lblJudulBuku.setText("-");

        btnCari.setText("Cari Anggota");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        jLabel6.setText("Cari Anggota");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTglKembali, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtTglPinjam))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(58, 58, 58)
                                .addComponent(cmbBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblJudulBuku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(cmbAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNamaAnggota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)))
                    .addComponent(btnSimpan)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCari))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTambahBaru)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnHapus)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCari)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNamaAnggota))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJudulBuku))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTglPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTglKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSimpan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahBaru)
                    .addComponent(btnHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // 1. PERSIAPAN OBJEK & IDENTIFIKASI DATA BARU/LAMA
        Peminjaman p = new Peminjaman();
        try {
            p.setIdpeminjaman(Integer.parseInt(txtId.getText()));
        } catch (NumberFormatException e) {
            p.setIdpeminjaman(0);
        }

        // 2. AMBIL DATA DARI FORM
        Anggota anggotaTerpilih = (Anggota) cmbAnggota.getSelectedItem();
        Buku bukuTerpilih = (Buku) cmbBuku.getSelectedItem();
        if (anggotaTerpilih == null || bukuTerpilih == null) {
            JOptionPane.showMessageDialog(this, "Harap pilih anggota dan buku terlebih dahulu.", "Input Belum Lengkap", JOptionPane.WARNING_MESSAGE);
            return;
        }
        p.setIdanggota(anggotaTerpilih.getIdanggota());
        p.setIdbuku(bukuTerpilih.getIdbuku());
        p.setTanggalpinjam(txtTglPinjam.getText());
        // Kita set tanggal kembali dan status di langkah 4

        // 3. VALIDASI TANGGAL (dari langkah 2f)
        // Validasi hanya berjalan jika kita sedang dalam proses pengembalian
        if (txtTglKembali.isEnabled() && !txtTglKembali.getText().isEmpty()) {
            try {
                java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
                java.util.Date tglPinjam = sdf.parse(txtTglPinjam.getText());
                java.util.Date tglKembali = sdf.parse(txtTglKembali.getText());

                if (tglKembali.before(tglPinjam)) {
                    JOptionPane.showMessageDialog(this, "Error: Tanggal kembali tidak boleh lebih awal dari tanggal pinjam.", "Kesalahan Validasi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (java.text.ParseException e) {
                JOptionPane.showMessageDialog(this, "Format tanggal salah. Gunakan format YYYY-MM-DD.", "Kesalahan Format", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // 4. LOGIKA BARU (TUGAS 2g): UPDATE STATUS & TANGGAL KEMBALI
        // Pertama, kita ambil status yang ada sekarang.
        Peminjaman dataLama = new Peminjaman().getById(p.getIdpeminjaman());
        p.setStatus(dataLama.getStatus());

        // Ambil tanggal kembali yang baru diisi oleh pengguna
        String tanggalKembaliBaru = txtTglKembali.getText();
        p.setTanggalkembali(tanggalKembaliBaru);

        // Jika field tanggal kembali aktif, berarti ini adalah proses pengembalian.
        // Maka, kita WAJIB mengubah statusnya menjadi 1.
        if (txtTglKembali.isEnabled()) {
            p.setStatus(1); // Set status menjadi 1 (Sudah Dikembalikan)
        }

        // 5. SIMPAN PERUBAHAN & SELESAIKAN
        p.save(); // Method save() akan otomatis melakukan UPDATE karena ID sudah ada

        JOptionPane.showMessageDialog(this, "Data berhasil disimpan.");
        tampilkanData();
        kosongkanForm();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnTambahBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahBaruActionPerformed
        // TODO add your handling code here:
        kosongkanForm();
    }//GEN-LAST:event_btnTambahBaruActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int row = tblPeminjaman.getSelectedRow();
        if (row >= 0) {
            int id = (int) tblPeminjaman.getValueAt(row, 0);
            Peminjaman p = new Peminjaman().getById(id);
            p.delete();
            tampilkanData();
            kosongkanForm();
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void cmbAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnggotaActionPerformed
        // TODO add your handling code here:
        Anggota agt = (Anggota) cmbAnggota.getSelectedItem();
        if (agt != null) {
            lblNamaAnggota.setText(agt.getNama());
            // Jika kamu ingin menampilkan data lain: agt.getAlamat(), agt.getTelepon()
        }
    }//GEN-LAST:event_cmbAnggotaActionPerformed

    private void cmbBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBukuActionPerformed
        // TODO add your handling code here:
        Buku bk = (Buku) cmbBuku.getSelectedItem();
        if (bk != null) {
            lblJudulBuku.setText(bk.getJudul());
            // Jika ingin tampilkan penulis/penerbit: bk.getPenulis(), bk.getPenerbit()
        }
    }//GEN-LAST:event_cmbBukuActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        String idAnggotaDicari = txtCari.getText(); // Ambil teks dari JTextField

        if (idAnggotaDicari.isEmpty()) {
            // Jika kosong, tampilkan semua data
            tampilkanData();
        } else {
            // Jika ada isi, panggil method search dan tampilkan hasilnya
            ArrayList<Peminjaman> hasilPencarian = new Peminjaman().searchByIdAnggota(idAnggotaDicari);
            tampilkanData(hasilPencarian);
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void tblPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPeminjamanMouseClicked
        int baris = tblPeminjaman.getSelectedRow();
    
    // 1. Mengambil data dari tabel dengan aman
    Object idObj = tblPeminjaman.getValueAt(baris, 0);
    Object namaAnggotaObj = tblPeminjaman.getValueAt(baris, 1); // Ambil nama anggota dari tabel
    Object judulBukuObj = tblPeminjaman.getValueAt(baris, 2);   // Ambil judul buku dari tabel
    Object tglPinjamObj = tblPeminjaman.getValueAt(baris, 3);
    Object tglKembaliObj = tblPeminjaman.getValueAt(baris, 4);
    Object statusObj = tblPeminjaman.getValueAt(baris, 5);

    // 2. Ubah Object menjadi String yang aman dari null
    String id = (idObj == null) ? "" : idObj.toString();
    String namaAnggotaDiTabel = (namaAnggotaObj == null) ? "" : namaAnggotaObj.toString();
    String judulBukuDiTabel = (judulBukuObj == null) ? "" : judulBukuObj.toString();
    String tglPinjam = (tglPinjamObj == null) ? "" : tglPinjamObj.toString();
    String tglKembali = (tglKembaliObj == null) ? "" : tglKembaliObj.toString();
    String status = (statusObj == null) ? "" : statusObj.toString();

    // 3. Tampilkan data ke JTextField
    txtId.setText(id);
    txtTglPinjam.setText(tglPinjam);
    txtTglKembali.setText(tglKembali);
    
    // 4. === LOGIKA BARU UNTUK MENYESUAIKAN COMBOBOX ===
    // Loop melalui semua item di cmbAnggota
    for (int i = 0; i < cmbAnggota.getItemCount(); i++) {
        Anggota anggotaDiCombo = cmbAnggota.getItemAt(i);
        // Jika nama anggota di dalam combo box sama dengan nama dari tabel
        if (anggotaDiCombo.getNama().equals(namaAnggotaDiTabel)) {
            cmbAnggota.setSelectedIndex(i); // Pilih item tersebut
            break; // Hentikan loop karena sudah ketemu
        }
    }

    // Loop melalui semua item di cmbBuku
    for (int i = 0; i < cmbBuku.getItemCount(); i++) {
        Buku bukuDiCombo = cmbBuku.getItemAt(i);
        // Jika judul buku di dalam combo box sama dengan judul dari tabel
        if (bukuDiCombo.getJudul().equals(judulBukuDiTabel)) {
            cmbBuku.setSelectedIndex(i); // Pilih item tersebut
            break; // Hentikan loop karena sudah ketemu
        }
    }

    // 5. Logika untuk mengaktifkan/menon-aktifkan field
    if (status.equals("Dipinjam")) {
        cmbAnggota.setEnabled(false);
        cmbBuku.setEnabled(false);
        txtTglPinjam.setEnabled(false);
        txtTglKembali.setEnabled(true);
    } else { // Jika statusnya "Sudah Dikembalikan" atau lainnya
        cmbAnggota.setEnabled(false);
        cmbBuku.setEnabled(false);
        txtTglPinjam.setEnabled(false);
        txtTglKembali.setEnabled(false);
    }
    }//GEN-LAST:event_tblPeminjamanMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPeminjaman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambahBaru;
    private javax.swing.JComboBox<backend.Anggota> cmbAnggota;
    private javax.swing.JComboBox<backend.Buku> cmbBuku;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJudulBuku;
    private javax.swing.JLabel lblNamaAnggota;
    private javax.swing.JTable tblPeminjaman;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtTglKembali;
    private javax.swing.JTextField txtTglPinjam;
    // End of variables declaration//GEN-END:variables
}
